<?php


/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
// function oomph_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
//    var_dump($hook);

//    if ($hook == 'views_view') {
//      $suggestions [] = 'views_view__oomph-ux';
//    }

//    if ($hook == 'node') {
//     $suggestions [] = 'node__oomph-ux';
//   }

// }


/**
 * Implements hook_theme_suggestions_NODE_alter() for form templates.
 * adds a custom suggestion with oomph and the view name
 */
function oomph_theme_suggestions_node_alter(array &$suggestions, array $variables, $hook) {

  $request = \Drupal::routeMatch()->getRouteObject()->getDefault('view_id');
  if (!empty($request)) {
    $suggestions[] = 'node__view__oomph__' . $request;
  }

}


/**
 * Implements hook_theme_suggestions_VIEWS_VIEW_alter() for form templates.
 * adds a custom suggestion with oomph around the view wrapper.
 */
function oomph_theme_suggestions_views_view_alter(array &$suggestions, array $variables, $hook) {

  $request = \Drupal::routeMatch()->getRouteObject()->getDefault('view_id');
  if (!empty($request)) {
    $suggestions[] = 'views_view__oomph__' . $request;
  }

}

/**
 * Implements hook_theme_suggestions_VIEWS_VIEW__UNFORMATTED_alter() for form templates.
 * adds a custom suggestion with oomph around the view wrapper if unformatted.
 *   var_dump($hook);
 */

function oomph_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables, $hook) {


  $request = \Drupal::routeMatch()->getRouteObject()->getDefault('view_id');
  if (!empty($request)) {
    $suggestions[] = 'views_view_unformatted__oomph__' . $request;
  }

}

